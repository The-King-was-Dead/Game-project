-- local BACKGROUND_COLOR = vmath.vector4(252/255, 223/255, 205/255, 255/255)
-- local BACKGROUND_COLOR = vmath.vector4(72/255, 159/255, 181/255, 255/255)
local BACKGROUND_COLOR = vmath.vector4(130/255, 192/255, 204/255, 255/255)
local timeline = 
{
	{
		spawned = false,
		count = 3,
		time = 4,
	},
	{
		spawned = false,
		count = 5,
		time = 60,
	},
	{
		spawned = false,
		count = 10,
		time = 90
	}
}

function init(self)
	-- msg.post("@render:", "use_fixed_projection", { zoom = 3, near = -10, far = 10 })
	msg.post("@render:", "clear_color", { color = BACKGROUND_COLOR })
	self.enemies= {}
	self.enemy_spawners = {}
	self.start_time = socket.gettime()
end

function update(self,dt)
	time_elapsed = socket.gettime() - self.start_time

	for key,value in pairs(timeline) do
		if timeline[key].spawned == false and time_elapsed >= timeline[key].time then
			start_enemy_spawner(self,timeline[key].count)
			timeline[key].spawned = true
		end
	end 
		
end

function start_enemy_spawner(self,enemies)
	enemy_count = 0
		local delay = math.random(1, 2)
		local timer_handle = timer.delay(delay, true, function(self,handle)
			local position = self.enemy_spawners[math.random(1, #self.enemy_spawners)]
			if enemy_count < enemies then
				create_enemy(self, position)
				enemy_count = enemy_count + 1
			else
				timer.cancel(handle)
			end
		end)
end

function create_enemy(self,position)
	random_speed = math.random(10,30)
	local id = factory.create("factory#enemy_factory",position,nil,{speed = random_speed});
	self.enemies[id] = {
		id = id
	}
end

function on_message(self, message_id, message, sender)
	if message_id == hash("register_enemy_spawner") then
		table.insert(self.enemy_spawners, go.get_position(message.id))
		print("registered spawner")
	end
	
end